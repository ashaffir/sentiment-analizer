version: '3.9'

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    # command: gunicorn --bind 0.0.0.0:8000 backend:app
    restart: always
    volumes:
    #   - static_volume:/vol/web/static
    #   - media_volume:/vol/web/media
      - ./nginx/config:/etc/certs
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  
  db:
    image: postgres:12-alpine
    restart: always
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  
  nginx:
    container_name: ng
    build: ./nginx
    restart: always
    volumes:
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
      - ./nginx/config:/etc/nginx/conf.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 443:443
      - 80:80
    depends_on:
      - backend

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/config:/etc/nginx/conf.d
      # - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      # - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx
volumes:
  postgres_data_prod:
  static_volume:
  media_volume:
  html:
  vhost:
  acme: