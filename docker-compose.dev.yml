version: '3.8'

services:
  web:
    container_name: web
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8111
    volumes:
      - ./backend:/usr/src/app/
    ports:
      - 8111:8111
    env_file:
      - ./.env.dev
    depends_on:
      - db
    networks:
      - scraper_network

  db:
    image: postgres:13.0-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
    ports:
      - 5432:5432
    networks:
      - scraper_network

  pgadmin:
      container_name: pgadmin
      image: dpage/pgadmin4
      environment:
        - PGADMIN_DEFAULT_EMAIL=admin@admin.com
        - PGADMIN_DEFAULT_PASSWORD=admin
      ports:
        - 5050:80
      depends_on:
        - db
      networks:
        - scraper_network

  scraper: 
    container_name: scraper
    build: 
      context: ./scraper
      dockerfile: Dockerfile
    env_file:
      - ./scraper/.env
    ports:
      - 8222:8222
    depends_on:
      - mongodb
    networks:
      - scraper_network

  mongodb:
    image: mongo:4.0.8
    container_name: mongo_db
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: mongopassword
      MONGO_INITDB_DATABASE: moodalarm
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - 'mongodb_data:/data/db'
    networks:
      - scraper_network

  mongo_express:
    image: mongo-express
    container_name: mongo_express_client
    restart: unless-stopped
    environment: 
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongodbuser
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopassword
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    networks:
      - scraper_network

networks:
  scraper_network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
    driver: local
